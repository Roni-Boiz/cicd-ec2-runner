name: CI/CD Pipeline

on:
  workflow_run:
    workflows: [Docker]
    types:
      - completed
  push:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Node.js Tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'  # or your required Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Start Node.js Application
        run: node server.js > /dev/null 2>&1 &

  build:
    runs-on: [self-hosted, git-workflow]
    name: Build Docker Image
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check Docker Version
        run: docker --version

      - name: Build Docker Image
        run: docker build -t node-app .

      # - name: Login Dockerhub
      #   env:
      #     DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      #     DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      #   run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        
      # - name: Build the Docker image
      #   run: docker build -t $DOCKER_USERNAME/node-app:latest .

      # - name: Push to Dockerhub
      #   run: docker push $DOCKER_USERNAME/node-app:latest

  deploy:
    runs-on: git-workflow
    name: Deploy Docker Container
    needs: build
    steps:
      - name: Stop and Remove Old Container
        run: |
          docker stop node-app-container || true
          docker rm -f node-app-container || true

      - name: Run Docker Container
        run: docker run -d --name node-app-container -p 8080:5000 node-app

      # - name: Pull Docker image
      #   run: docker pull $DOCKER_USERNAME/node-app:latest

      # - name: Delete Old docker container
      #   run: docker rm -f node-app-container || true

      # - name: Run Docker Container
      #   run: docker run -d --name node-app-container -p 8080:5000  $DOCKER_USERNAME/node-app:latest

      - name: Get Docker Container IP
        run: |
          CONTAINER_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' node-app-container)
          echo "Container IP is $CONTAINER_IP"
          echo "$CONTAINER_IP" > container_ip.txt

      - name: Prune Unused Docker Images
        run: docker image prune -a -f
