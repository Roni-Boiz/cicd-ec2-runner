name: Nginx

on:
  workflow_run:
    workflows: [CI/CD Pipeline]
    types:
      - completed

  workflow_dispatch:

jobs:
  install-nginx:
    runs-on: [self-hosted, git-workflow]
    outputs:
      nginx_installed: ${{ steps.check-nginx.outputs.nginx_installed }}
    steps:
      - name: Check if Niginx is already installed
        id: check-nginx
        run: |
          if command -v nginx &> /dev/null; then
            echo "Nginx is already installed."
            echo "nginx_installed=true" >> $GITHUB_OUTPUT
          else
            echo "nginx_installed=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Prevent Re-run if Nginx is Installed
        if: ${{ steps.check-nginx.outputs.nginx_installed == 'true' }}
        run: exit 0

      - name: Install Nginx
        if: ${{ steps.check-nginx.outputs.nginx_installed == 'false' }}
        run: |
          sudo apt-get update
          sudo apt-get install nginx -y
          sudo ufw allow 'Nginx Full'
          sudo systemctl start nginx
          sudo systemctl enable nginx
          echo "nginx_installed=true" >> $GITHUB_OUTPUT
          echo "Nginx installed successfully!"

      - name: Verify Nginx Installation
        run: nginx -v

  proxy-setup:
    runs-on: [self-hosted, git-workflow]
    needs: install-nginx
    if: ${{ needs.install-nginx.outputs.nginx_installed == 'true' }}
    steps:
      - name: Read Container ID
        run: |
          CONTAINER_IP=$(cat container_ip.txt)
          echo "CONTAINER_IP=$CONTAINER_IP" >> $GITHUB_ENV 
          echo "Container IP is $CONTAINER_IP"
        
      - name: Setup Proxy
        run: |
          sudo awk -v container_ip="$CONTAINER_IP" '
              /location \/ \{/ {
                  if (!found) {
                      in_location_block = 1
                      found = 1
                      print
                      print "                proxy_pass http://" container_ip ":5000;"
                      replaced = 1
                      next
                  }
              }
              in_location_block && /proxy_pass/ {
                  if (!replaced) {
                      print "                proxy_pass http://" container_ip ":5000;"
                      replaced = 1
                  }
                  next
              }
              in_location_block && /\}/ {
                  in_location_block = 0
              }
              {
                  print
              }
          ' /etc/nginx/sites-available/default > temp_file && sudo mv temp_file /etc/nginx/sites-available/default
          sudo systemctl reload nginx
